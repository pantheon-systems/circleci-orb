version: 2.1
description: |
  Use CircleCI to push code to Pantheon Dev and Multidev Environments. Maintained at https://github.com/pantheon-systems/circleci-orb

jobs:
  push:
    docker:
    - image: quay.io/pantheon-public/build-tools-ci:5.x
    working_directory: ~/sitedir
    environment:
      TZ: "/usr/share/zoneinfo/America/Los_Angeles"
      ADMIN_USERNAME: admin
      BUILD_TOOLS_VERSION: dev-option-for-no-force
      TERM: dumb
    parameters:
      checkout:
        description: "Should this job checkout your repository as the first step? Set to false if you are calling 'checkout' in 'pre-steps'"
        default: true
        type: boolean
    steps:

      - when:
          condition: <<parameters.checkout>>
          steps:
            - checkout

      # Set environment variables by calling a script from the container.
      # https://github.com/pantheon-systems/docker-build-tools-ci/blob/5.x/scripts/set-environment
      # Perhaps the most important variable here is TERMINUS_ENV which
      # determines which Pantheon environment is targeted.
      # When on the master branch in GitHub, the target environment on Pantheon
      # will be Dev.
      # If the current commit is part of a pull request, the target environment
      # will be the Multidev environment pr-$CI_PULL_REQUEST
      # In all other cases a new Pantheon multidev will be created specifically
      # for this build number, ci-$CIRCLE_BUILD_NUM.
      - run:
          name: Derive additional environment variables
          command: /build-tools-ci/scripts/set-environment

      # Later commands require being signed in to Pantheon.
      - run:
          name: Authenticate with Pantheon's CLI using a machine token
          command: terminus -n auth:login --machine-token="$TERMINUS_TOKEN"

      - restore_cache:
            keys:
              - pantheon-repo-{{ .Branch }}
              - pantheon-repo-
      - run:
          name: Checkout site repository from Pantheon
          command: |
            export PANTHEON_REPO_DIR="/tmp/pantheon_repo_for_$TERMINUS_SITE"
            if [ ! -d "$PANTHEON_REPO_DIR/.git" ]; then
              mkdir $PANTHEON_REPO_DIR
              git -C $PANTHEON_REPO_DIR init
              git -C $PANTHEON_REPO_DIR remote add pantheon $(terminus connection:info $TERMINUS_SITE.dev --field=git_url)
              git -C $PANTHEON_REPO_DIR remote -v
            fi

            git -C $PANTHEON_REPO_DIR fetch pantheon
            REMOTE_REF=$(git -C $PANTHEON_REPO_DIR ls-remote pantheon | grep "refs/heads/$TERMINUS_ENV$") || echo "hmm, assigning an empty var returns an error."

            if [ -n "$REMOTE_REF" ]; then
              git -C $PANTHEON_REPO_DIR checkout $TERMINUS_ENV
              git -C $PANTHEON_REPO_DIR pull
            else
              git -C $PANTHEON_REPO_DIR checkout master
              git -C $PANTHEON_REPO_DIR pull
              git -C $PANTHEON_REPO_DIR checkout -b $TERMINUS_ENV
            fi

      - save_cache:
          key: pantheon-repo-{{ .Branch }}
          paths:
            - /tmp/pantheon_repo_for_$TERMINUS_SITE

      - run:
          name: Delete old Multidevs to make space for a potential new one
          command: terminus -n build:env:delete:ci "$TERMINUS_SITE" --keep=2 --yes

      - run:
          name: Copy code to the local clone of the Pantheon repository
          command: |
              export PANTHEON_REPO_DIR="/tmp/pantheon_repo_for_$TERMINUS_SITE"
              rsync -av --exclude='.git'  . $PANTHEON_REPO_DIR  --delete
              git -C $PANTHEON_REPO_DIR status

      - run:
          name: Commit code to Pantheon repository and push to Pantheon
          command: |
              export PANTHEON_REPO_DIR="/tmp/pantheon_repo_for_$TERMINUS_SITE"
              # Create a new multidev site to test on
              terminus -n env:wake "$TERMINUS_SITE.dev"
              cd $PANTHEON_REPO_DIR
              terminus -n build:env:create "$TERMINUS_SITE.live" "$TERMINUS_ENV" --yes --clone-content
      - run:
          name: Delete Multidev environments made for now-closed pull requests
          command: |
            if [[ $CI_BRANCH != "master" ]] ; then
              exit 0
            fi
            # Merge the multidev for the PR into the dev environment
            terminus -n build:env:merge "$TERMINUS_SITE.$TERMINUS_ENV" --yes
            # Delete old multidev environments associated with a PR that has been
            # merged or closed.
            terminus -n build:env:delete:pr "$TERMINUS_SITE" --yes

      - run:
          name: Copy environment variables to persist to workspace for use in subsequent jobs.
          command: cp $BASH_ENV bash_env.txt
      - persist_to_workspace:
          root: .
          paths:
            - bash_env.txt
examples:
  just_push:
    description: |
      The simplest example of using this Orb.
    usage:
      version: 2.1
      workflows:
        version: 2
        just_push:
          jobs:
            - pantheon/push
      orbs:
        pantheon: pantheon-systems/pantheon@dev:0.0.1
